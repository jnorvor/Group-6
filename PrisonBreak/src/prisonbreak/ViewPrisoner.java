/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.sql.PreparedStatement;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jude
 */
public class ViewPrisoner extends javax.swing.JFrame {
DefaultTableModel prison;
java.sql.Connection conn = null;
    java.sql.Statement s;
    java.sql.ResultSet r;
    /**
     * Creates new form ViewPrisoner
     */
    public ViewPrisoner() {
        initComponents();
        prison = (DefaultTableModel)jTable1.getModel();
        initialize();
        display();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First Name", "Last Name", "Address", "Date of Birth", "Gender", "Crime", "Date Imprisoned", "Release Date", "Other Crimes", "Cell Block", "Cell"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Edit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Return");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 editGuard();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
public void initialize() {
        try {
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            conn = java.sql.DriverManager.getConnection(
                    "jdbc:mysql://localhost/prisonbreak?user=root&password=root");

        } catch (Exception e) {
            System.out.println(e);
            //System.exit(0);
        }
         try {
            s = conn.createStatement();
            r = s.executeQuery("SELECT * FROM prisoners");
            ResultSetMetaData j = r.getMetaData();
        } catch (Exception e) {
        }
}
    public void display(){
   try {
           while(r.next()){
            prison.addRow(new Object[]{r.getString("ID"), r.getString("first_name"), r.getString("last_name"), r.getString("address"), r.getString("date_of_birth"), r.getString("gender"), r.getString("crime"), r.getString("date_imprisoned") ,r.getString("release_date"), r.getString("other_crimes"), r.getString("cell_block")});
           }
        } catch (SQLException ex) {
        }
    } 
    
     public void editGuard(){
//      record = (DefaultTableModel) jTable1.getModel();

        int row = jTable1.getSelectedRow();
        int column = jTable1.getSelectedColumn();
        int code = column - column;
        int dataCode = Integer.parseInt((String) jTable1.getValueAt(row, code));

        if (column == 1) {
            String msg = JOptionPane.showInputDialog(null, "Please Enter First Name:");
            try {
                PreparedStatement p = conn.prepareStatement("UPDATE prisoners SET first_name=? WHERE ID=?;");
                p.setString(1, msg);
                p.setInt(2, dataCode);
                p.execute();
                jTable1.setValueAt(msg, row, column);
            } catch (Exception e) {
                System.out.println("Error" + e.toString());
                return;
            }
        } else if (column == 2) {
            String msg = JOptionPane.showInputDialog(null, "Please Enter Last Name: ");
            try {
                PreparedStatement p = conn.prepareStatement("UPDATE prisoners SET last_name=? WHERE ID=?;");
                p.setString(1, msg);
                p.setInt(2, dataCode);
                p.execute();
                jTable1.setValueAt(msg, row, column);
            } catch (Exception e) {
                System.out.println("Error" + e.toString());
                return;
            }
        } else if (column == 3) {
            String msg = JOptionPane.showInputDialog(null, "Please Enter Address: ");
            try {
                PreparedStatement p = conn.prepareStatement("UPDATE prisoners SET address=? WHERE ID=?;");
                p.setString(1, msg);
                p.setInt(2, dataCode);
                p.execute();
                jTable1.setValueAt(msg, row, column);
            } catch (Exception e) {
                System.out.println("Error" + e.toString());
                return;
            } 
        }else if (column == 4) {
            String msg = JOptionPane.showInputDialog(null, "Please Enter Date of Birth: ");
            try {
                PreparedStatement p = conn.prepareStatement("UPDATE prisoners SET date_of_birth=? WHERE ID=?;");
                p.setString(1, msg);
                p.setInt(2, dataCode);
                p.execute();
                jTable1.setValueAt(msg, row, column);
            } catch (Exception e) {
                System.out.println("Error" + e.toString());
                return;
            } 
        }else if (column == 5) {
            String[] list = {"m", "f"};
            String msg = (String) JOptionPane.showInputDialog(null, "Choose Gender", "Nice", JOptionPane.QUESTION_MESSAGE, null, list, list[0]);
            try {
                PreparedStatement p = conn.prepareStatement("UPDATE prisoners SET gender=? WHERE ID=?;");
                p.setString(1, msg);
                p.setInt(2, dataCode);
                p.execute();
                jTable1.setValueAt(msg, row, column);
            } catch (Exception e) {
                System.out.println("Error" + e.toString());
                return;
            }
        }else if (column == 6) {
            String msg = JOptionPane.showInputDialog(null, "Please Update Crime: ");
            try {
                PreparedStatement p = conn.prepareStatement("UPDATE prisoners SET role=? WHERE Code=?;");
                p.setString(1, msg);
                p.setInt(2, dataCode);
                p.execute();
                jTable1.setValueAt(msg, row, column);
            } catch (Exception e) {
                System.out.println("Error" + e.toString());
                return;
            } 
        }
        else if (column == 7) {
            String msg = JOptionPane.showInputDialog(null, "Please Enter Date Imprisoned: ");
            try {
                PreparedStatement p = conn.prepareStatement("UPDATE prisoners SET shift_start=? WHERE ID=?;");
                p.setString(1, msg);
                p.setInt(2, dataCode);
                p.execute();
                jTable1.setValueAt(msg, row, column);
            } catch (Exception e) {
                System.out.println("Error" + e.toString());
                return;
            }
        }else if (column == 8) {
            String msg = JOptionPane.showInputDialog(null, "Please Enter Release date: ");
            try {
                PreparedStatement p = conn.prepareStatement("UPDATE prisoners SET shift_end=? WHERE ID=?;");
                p.setString(1, msg);
                p.setInt(2, dataCode);
                p.execute();
                jTable1.setValueAt(msg, row, column);
            } catch (Exception e) {
                System.out.println("Error" + e.toString());
                return;
            }
        }else if (column == 9) {
            String msg = JOptionPane.showInputDialog(null, "Please Enter Other Crimes Committed: ");
            try {
                PreparedStatement p = conn.prepareStatement("UPDATE prisoners SET shift_end=? WHERE ID=?;");
                p.setString(1, msg);
                p.setInt(2, dataCode);
                p.execute();
                jTable1.setValueAt(msg, row, column);
            } catch (Exception e) {
                System.out.println("Error" + e.toString());
                return;
            }
        }else if (column == 10) {
            String[] list = {"Block1", "Block2","Block3","Block4","Block5"};
            String msg = (String) JOptionPane.showInputDialog(null, "Choose Cell Block", "Nice", JOptionPane.QUESTION_MESSAGE, null, list, list[0]);
            try {
                PreparedStatement p = conn.prepareStatement("UPDATE prisoners SET gender=? WHERE ID=?;");
                p.setString(1, msg);
                p.setInt(2, dataCode);
                p.execute();
                jTable1.setValueAt(msg, row, column);
            } catch (Exception e) {
                System.out.println("Error" + e.toString());
                return;
            }
        }
     }

     public void delete() {
        int row = jTable1.getSelectedRow();
        int Code = Integer.parseInt((String) jTable1.getValueAt(row, 0));
        try {
            PreparedStatement p = conn.prepareStatement("DELETE FROM prisoners WHERE ID = ?;");
            p.setInt(1, Code);
            ((DefaultTableModel) jTable1.getModel()).removeRow(row);
            p.execute();
        } catch (Exception e) {
            System.out.println("Error" + e.toString());
            return;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPrisoner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPrisoner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPrisoner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPrisoner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPrisoner().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
